// filter 메소드
const test = ['김영훈', '김윤수', '김동욱', '강대위', '김영준',
    '김규식', '김태호', '김효신', '손효준', '김현승', '김재하', '김유나',
    '김재훈', '김혜선', '김민환', '김규리', '김소원', '김우재', '최영준',
    '김태순', '김종훈', '김성환', '김승용', '김지혜', '이승욱', '김도현',
    '김승규', '윤하은', '김유진', '김정민', '김혜정', '김예진', '김여진',
    '김성희', '김혜수', '김인선', '김상필', '김혜진', '서상원', '김상혜',
    '김민기', '김그루', '김희지'];

// 해당조건에 만족하는 요소들을 모아서 새로운 배열을 만들어준다.
const filterKim = test.filter((el) => el[0] == '김');
console.log(filterKim);

// find 메소드
// 해당 조건에 만족하는 첫번째 요소를 리턴한다.
// 조건에 맞는 요소가 없으면 undefined를 리턴한다.
const findFirstKim = test.find((el) => el[0] == '김');
console.log(findFirstKim);

// 예제
const seoul = ['김영훈', '김윤수', '김동욱', '강대위', '김영준',
    '김규식', '김태호', '김효신', '손효준', '김현승', '김재하', '김유나',
    '김재훈', '김혜선', '김민환', '김규리', '김소원', '김우재', '최영준',
    '김태순', '김종훈', '김성환', '김승용', '김지혜', '이승욱', '김도현',
    '김승규', '윤하은', '김유진', '김정민', '김혜정', '김예진', '김여진',
    '김성희', '김혜수', '김인선', '김상필', '김혜진', '서상원', '김상혜',
    '김민기', '김그루', '김희지'];

// 여기에 코드를 작성하세요
const notKims = seoul.filter((name) => name[0] !== '김');

console.log(notKims); // (6) ["강대위", "손효준", "최영준", "이승욱", "윤하은", "서상원"]
